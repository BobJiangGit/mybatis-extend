package org.mybatis.extend.demo.model.account;

import org.mybatis.extend.generic.model.BasePrimaryKeyModel;

import java.io.Serializable;
import java.util.Date;

/**
* Model: AdminAccount
* Table: admin_account
* Alias: account
*
* This Model generated by MyBatis Generator Extend.
*/
public class AdminAccount extends BasePrimaryKeyModel<Integer> implements Serializable {
    /**
     * 
     * enable
     */
    private Byte enable;

    /**
     * 
     * name
     */
    private String name;

    /**
     * 
     * email
     */
    private String email;

    /**
     * 
     * username
     */
    private String username;

    /**
     * 
     * password
     */
    private String password;

    /**
     * 
     * register_datetime
     */
    private Date registerDatetime;

    /**
     * 
     * role_ids
     */
    private String roleIds;

    /**
     * 
     * organization_id
     */
    private Integer organizationId;

    private static final long serialVersionUID = 1L;

    /**
     * 
     * enable
     */
    public Byte getEnable() {
        return enable;
    }

    /**
     * 
     * enable
     *
     * @param enable 
     */
    public void setEnable(Byte enable) {
        this.enable = enable;
    }

    /**
     * 
     * name
     */
    public String getName() {
        return name;
    }

    /**
     * 
     * name
     *
     * @param name 
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * 
     * email
     */
    public String getEmail() {
        return email;
    }

    /**
     * 
     * email
     *
     * @param email 
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * 
     * username
     */
    public String getUsername() {
        return username;
    }

    /**
     * 
     * username
     *
     * @param username 
     */
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * 
     * password
     */
    public String getPassword() {
        return password;
    }

    /**
     * 
     * password
     *
     * @param password 
     */
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * 
     * register_datetime
     */
    public Date getRegisterDatetime() {
        return registerDatetime;
    }

    /**
     * 
     * register_datetime
     *
     * @param registerDatetime 
     */
    public void setRegisterDatetime(Date registerDatetime) {
        this.registerDatetime = registerDatetime;
    }

    /**
     * 
     * role_ids
     */
    public String getRoleIds() {
        return roleIds;
    }

    /**
     * 
     * role_ids
     *
     * @param roleIds 
     */
    public void setRoleIds(String roleIds) {
        this.roleIds = roleIds;
    }

    /**
     * 
     * organization_id
     */
    public Integer getOrganizationId() {
        return organizationId;
    }

    /**
     * 
     * organization_id
     *
     * @param organizationId 
     */
    public void setOrganizationId(Integer organizationId) {
        this.organizationId = organizationId;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", enable=").append(enable);
        sb.append(", name=").append(name);
        sb.append(", email=").append(email);
        sb.append(", username=").append(username);
        sb.append(", password=").append(password);
        sb.append(", registerDatetime=").append(registerDatetime);
        sb.append(", roleIds=").append(roleIds);
        sb.append(", organizationId=").append(organizationId);
        sb.append("]");
        return sb.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        AdminAccount other = (AdminAccount) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()));
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        return result;
    }
}