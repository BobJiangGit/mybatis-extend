<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!--
        conf example.
        可以添加table节点，其他节点不要改动。
    -->

    <properties resource="generatorConfig.properties" />

    <context id="mysqlMap" targetRuntime="MyBatis3">
        <property name="javaFileEncoding" value="UTF-8"/>

        <plugin type="org.mybatis.generator.plugins.ToStringPlugin" />
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
        <!--重写Model的equals和hashCode方法-->
        <plugin type="org.mybatis.extend.generator.plugins.EqualsHashCodePlugin" />

        <!--修改Model的父类，注释，主键属性-->
        <plugin type="org.mybatis.extend.generator.plugins.BaseModelGeneratorPlugin">
            <property name="modelTargetPackage" value="${modelTargetPackage}"/>
        </plugin>

        <!--Mapper接口生成器，生成的接口会继承GenericMapper-->
        <plugin type="org.mybatis.extend.generator.plugins.GenericMapperGeneratorPlugin">
            <property name="mapperTargetDir" value="${mapperTargetDir}"/>
            <property name="mapperTargetPackage" value="${mapperTargetPackage}"/>
        </plugin>

        <!--Service接口生成器，若不需要生成Service接口，可以将此插件删掉-->
        <plugin type="org.mybatis.extend.generator.plugins.GenericServiceGeneratorPlugin">
            <property name="serviceTargetDir" value="${serviceTargetDir}"/>
            <property name="serviceTargetPackage" value="${serviceTargetPackage}"/>
        </plugin>

        <!--Service实现类生成器，若不需要生成Service实现类，可以将此插件删掉-->
        <plugin type="org.mybatis.extend.generator.plugins.GenericServiceImplGeneratorPlugin">
            <property name="serviceTargetDir" value="${serviceTargetDir}"/>
            <property name="serviceTargetPackage" value="${serviceTargetPackage}"/>
            <property name="mapperTargetPackage" value="${mapperTargetPackage}"/>
            <!--是否添加spring注解，默认为添加-->
            <property name="statement" value="true"/>
        </plugin>

        <!--拓展方法生成器-->
        <plugin type="org.mybatis.extend.generator.plugins.SqlMapExtendMethodGeneratorPlugin"/>

        <!--自定义的注释生成器-->
        <commentGenerator type="org.mybatis.extend.generator.internal.CustomCommentGenerator"/>

        <jdbcConnection driverClass="${jdbc.driverClassName}"
                connectionURL="${jdbc.url}"
                userId="${jdbc.username}"
                password="${jdbc.password}"/>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!--model生成器-->
        <javaModelGenerator targetPackage="${modelTargetPackage}" targetProject="${modelTargetDir}">
            <property name="enableSubPackages" value="true" />
        </javaModelGenerator>

        <!--xml生成器-->
        <sqlMapGenerator targetPackage="${xmlTargetPackage}" targetProject="${xmlTargetDir}">
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!--
            tableName: 表名称。
            alias: 别名，在sql中会应用到，方便联合查询。
            domainObjectName: Model类名称，默认为表的驼峰名称，若需指定子包，可以"模块名称.类名"规则命名。
        -->
        <table tableName="table_name" alias="tab" domainObjectName="module.TableName">
            <!-- 为true则不使用驼峰命名法 -->
            <property name="useActualColumnNames" value="true"/>
            <!--sqlStatement指定为JDBC即可-->
            <generatedKey column="id" sqlStatement="JDBC"/>
        </table>
        
	</context>
</generatorConfiguration> 